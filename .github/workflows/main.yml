on:
  push:
    branches: ["main"]
jobs:
  build_docker_image_ecr:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: "1.5.0"
      - name: run api tests
        working-directory: ./api
        run: |
          npm cache clean --force
          npm install
          npm run test
      - name: run web_client tests
        working-directory: ./web_client
        run: |
          npm i  --force
          npx vitest run
      - name: log in to aws
        run: |
          aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws configure set aws_default_region_name ${{ secrets.AWS_DEFAULT_REGION_NAME }}
          aws configure set aws_default_output_format "json"
      - name: Create RDS Database
        working-directory: ./aws
        shell: bash
        run: |
          terraform init
          terraform state pull
          terraform apply -auto-approve -target module.rds
      - name: Fetch DATABASE_URL from Terraform output
        id: terraform_output
        run: |
          DATABASE_URL=$(terraform output -raw rds_endpoint) # Replace with your actual output name
          echo "DATABASE_URL=$DATABASE_URL" >> $GITHUB_ENV
      - name: Update Prisma schema with DATABASE_URL
        run: |
          # Ensure Prisma schema is updated with the correct DATABASE_URL
          sed -i "s|env(\"DATABASE_URL\")|\"${{ env.DATABASE_URL }}\"|" ./api/prisma/schema.prisma

      - name: Build the Docker image
        working-directory: ./api
        run: docker build . --file Dockerfile --tag akerondocker/testrop:1.0.2
      - name: Build the ecr
        working-directory: ./aws
        run: terraform apply -auto-approve -target module.ecr
      - name: Push image to ecr
        run: |
          aws ecr get-login-password --region eu-central-1 | docker login --username AWS --password-stdin 863872515231.dkr.ecr.eu-central-1.amazonaws.com
          docker tag akerondocker/testrop:1.0.2 863872515231.dkr.ecr.eu-central-1.amazonaws.com/akeronecr:1.0.2
          docker push 863872515231.dkr.ecr.eu-central-1.amazonaws.com/akeronecr:1.0.2
      - name: Create the cluster
        working-directory: ./aws
        run: terraform apply -auto-approve -target module.ecs
      - name: Upload the s3 bucket
        working-directory: ./aws
        run: terraform apply -auto-approve -target module.s3
      - name: Get ALB DNS
        working-directory: ./aws
        run: |
          ALB_DNS=$(terraform output -raw alb_dns_name)
          echo "ALB_DNS=${ALB_DNS}" >> $GITHUB_ENV
      - name: Create frontend environment
        working-directory: ./web_client
        run: |
          echo "VITE_BASE_URL=http://${ALB_DNS}" > .env.production
      - name: Build frontend
        working-directory: ./web_client
        run: |
          npm install
          npm run build
      - name: Upload to s3
        working-directory: ./web_client
        run: |
          aws s3 sync dist/ s3://akeronbucket --delete
      - name: Create frontend environment
        working-directory: ./web_client
        run: |
          CF_DOMAIN=$(terraform output -raw cloudfront_domain_name)
          echo "VITE_BASE_URL=http://${CF_DOMAIN}" > .env.production
